% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_dist.R
\name{plot_dist}
\alias{plot_dist}
\title{Plot predicted distributional regression models}
\usage{
plot_dist(model, pred_params = NULL, palette = "viridis",
  type = "pdf", rug = FALSE, vary_by = NULL)
}
\arguments{
\item{model}{A fitted distributional regression model object. Check
\link{distreg_checker} to see which classes are supported.}

\item{pred_params}{A data.frame with rows for every model prediction and
columns for every predicted parameter of the distribution. Is easily
obtained with the \code{distreg.vis} function \code{\link{preds}}.}

\item{palette}{The colour palette used for colouring the plot. You can use
any of the ones supplied in \code{\link[ggplot2]{scale_fill_brewer}} though
I suggest you use one of the qualitative ones: Accent, Dark2, etc. Since
0.5.0 \code{"viridis"} is included, to account for colour blindness.}

\item{type}{Do you want the probability distribution function ("pdf") or the
cumulative distribution function ("cdf")?}

\item{rug}{If TRUE, creates a rug plot}

\item{vary_by}{Variable name in character form over which to vary the
mean/reference values of explanatory variables. It is passed to
\link{set_mean}. See that documentation for further details.}
}
\value{
A ggplot2 object.
}
\description{
This function plots the parameters of a predicted distribution (e.g. obtained
through \code{\link{preds}}) with ggplot2. You can use all supported
distributional regression model classes (check details of
\link{distreg_checker}) as well as all supported distributional families
(available at \link{dists}).
}
\examples{
# Generating data
data_fam <- model_fam_data(fam_name = "BE")

# Fit model
library("gamlss")
beta_model <- gamlss(BE ~ norm2 + binomial1,
  data = data_fam, family = BE())

# Obtains all explanatory variables and set them to the mean, varying by binomial1
# (do this if you do not want to specify ndata of preds by yourself)
ndata <- set_mean(model_data(beta_model), vary_by = "binomial1")

# Obtain predicted parameters
param_preds <- preds(beta_model, newdata = ndata)

# Create pdf, cdf plots
plot_dist(beta_model, param_preds, rug = TRUE)
plot_dist(beta_model, param_preds, type = "cdf")
plot_dist(beta_model, param_preds, palette = 'default')

# You can also let plot_dist do the step of predicting parameters of the mean explanatory variables:
plot_dist(beta_model, pred_params = NULL, vary_by = 'binomial1')
}
